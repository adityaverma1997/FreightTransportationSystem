/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package adminui;

import java.util.List;
import javax.swing.JOptionPane;
import model.dao.DriverInfoDAO;
import model.dao.TourScheduleDAO;
import model.dao.TruckInfoDAO;
import model.to.DriverInfo;
import model.to.TourSchedule;
import model.to.TruckInfo;
import operations.Validations;
import sound.ProSound;
import utility.CommonOperations;

/**
 *
 * @author ADITYA
 */
public class AddTourSchedule extends javax.swing.JInternalFrame {

    private int sid;

    public AddTourSchedule() {
        initComponents();
        visibilitymodes(0);
        jcbTruckNo.removeAllItems();
        jcbTruckNo.addItem("Choose Truck No");
        /*List<TruckInfo> truck = new TruckInfoDAO().getAllRecord();
        for (TruckInfo ti : truck) {
            jcbTruckNo.addItem(ti);
        }*/
        jcbDriverID.removeAllItems();
        jcbDriverID.addItem("Choose Driver");
        /*List<DriverInfo> driver = new DriverInfoDAO().getAllRecord();
        for (DriverInfo di : driver) {
            jcbDriverID.addItem(di);
        }*/
    }

    public AddTourSchedule(TourSchedule record) {
        this();
        if (record != null) {
            this.sid = record.getSID();
            setTitle("Update Tour Schedule Details");
            btnAdd.setText("Update Tour Schedule Details");
            for (int i = 1; i < jcbTruckNo.getItemCount(); i++) {
                TruckInfo tru = (TruckInfo) jcbTruckNo.getItemAt(i);
                if (tru.getTruckno().equals(record.getTruckno())) {
                    jcbTruckNo.setSelectedIndex(i);
                    break;
                }
            }
            jtfConsumerName.setText(record.getCustomername());
            for (int i = 1; i < jcbDriverID.getItemCount(); i++) {
                DriverInfo dri = (DriverInfo) jcbDriverID.getItemAt(i);
                if (dri.getDriverid() == record.getDriverid()) {
                    jcbDriverID.setSelectedIndex(i);
                    break;
                }
            }
            jtfAddress.setText(record.getAddress());
            jtfContactNo.setText(record.getContactno());
            fdpTourDate.setDate(record.getTourdate());
            jtfCharges.setText(String.valueOf(record.getCharges()));
            jtfNoOfDays.setText(String.valueOf(record.getNoofdays()));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jcbTruckNo = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jtfAddress = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jcbDriverID = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jtfConsumerName = new javax.swing.JTextField();
        jtfContactNo = new javax.swing.JTextField();
        jtfCharges = new javax.swing.JTextField();
        fdpTourDate = new adminui.FutureDatePanel1();
        btnAdd = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jtfNoOfDays = new javax.swing.JTextField();
        btnCheckAvailability = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("Add Tour Schedule Details");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Choose Truck No:");

        jcbTruckNo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Enter Customer Contact No:");

        jtfAddress.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("Enter Consumer Name:");

        jcbDriverID.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setText("Enter Driver ID:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setText("Enter Customer Address:");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel6.setText("Enter Charges:");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel7.setText("Enter Tour Date:");

        jtfConsumerName.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jtfConsumerName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfConsumerNameKeyTyped(evt);
            }
        });

        jtfContactNo.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jtfCharges.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        btnAdd.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnAdd.setText("Add Tour Schedule Details");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel8.setText("Enter No Of Days:");

        jtfNoOfDays.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jtfNoOfDays.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfNoOfDaysKeyTyped(evt);
            }
        });

        btnCheckAvailability.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnCheckAvailability.setText("Check Availability");
        btnCheckAvailability.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckAvailabilityActionPerformed(evt);
            }
        });

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/adminui/date.png"))); // NOI18N

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/adminui/location.png"))); // NOI18N

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/adminui/contactno.png"))); // NOI18N

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/adminui/rupees.png"))); // NOI18N

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/adminui/name.png"))); // NOI18N

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/adminui/mid.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addGap(118, 118, 118)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(fdpTourDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addContainerGap(78, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jtfAddress, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfNoOfDays, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE)
                            .addComponent(btnAdd, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE)
                            .addComponent(jtfCharges, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE)
                            .addComponent(jtfContactNo, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfConsumerName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcbDriverID, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jcbTruckNo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(172, 172, 172)
                .addComponent(btnCheckAvailability, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fdpTourDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(btnCheckAvailability, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbTruckNo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jcbDriverID, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfConsumerName, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jtfContactNo, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jtfCharges, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfNoOfDays, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        ProSound ps = new ProSound();
        String message = "";
        boolean allvalid = true;
        String consumername = jtfConsumerName.getText().trim();
        String address = jtfAddress.getText().trim();
        String contactno = jtfContactNo.getText().trim();
        String charges = jtfCharges.getText().trim();
        String noofdays = jtfNoOfDays.getText().trim();

        if (fdpTourDate.getSelectedDate() == null) {
            allvalid = false;
            message += "Please choose any Tour Date\n\n";
        }
        if (jcbTruckNo.getSelectedIndex() == 0) {
            allvalid = false;
            message += "Please choose any Truck No\n\n";
        }
        if (jcbDriverID.getSelectedIndex() == 0) {
            allvalid = false;
            message += "Please choose any Driver ID\n\n";
        }
        if (Validations.isEmpty(consumername)) {
            allvalid = false;
            message += "Please enter some value in Consumer Name box\n\n";
        } else if (!Validations.onlyCharacter(consumername)) {
            allvalid = false;
            message += "Please enter character value in Consumer Name box\n\n";
        }
        if (Validations.isEmpty(address)) {
            allvalid = false;
            message += "Please enter some value in Address box\n\n";
        }
        if (Validations.isEmpty(contactno)) {
            allvalid = false;
            message += "Please enter some value in Contact No box\n\n";
        } else if (!Validations.validContact(contactno)) {
            allvalid = false;
            message += "Contact No is Invalid\n\n";
        }
        if (Validations.isEmpty(charges)) {
            allvalid = false;
            message += "Please enter some value in Charges box\n\n";
        } else if (!Validations.isFloat(charges)) {
            allvalid = false;
            message += "Please enter decimal value in Charges box\n\n";
        }
        if (Validations.isEmpty(noofdays)) {
            allvalid = false;
            message += "Please enter some value in No Of Days box\n\n";
        }
        if (allvalid) {
            TruckInfo ti = (TruckInfo) jcbTruckNo.getSelectedItem();
            DriverInfo di = (DriverInfo) jcbDriverID.getSelectedItem();
            TourScheduleDAO action = new TourScheduleDAO();
            if (action.getRecord(ti.getTruckno(), di.getDriverid(), fdpTourDate.getSelectedDate()) != null) {
                ps.computererror();
                message = "This driver is already assigned a truck on selected date";
            } else {
                TourSchedule record = new TourSchedule();
                record.setTruckno(ti.getTruckno());
                record.setCustomername(consumername);
                record.setDriverid(di.getDriverid());
                record.setAddress(address);
                record.setContactno(contactno);
                record.setTourdate(fdpTourDate.getSelectedDate());
                record.setCharges(Float.parseFloat(charges));
                record.setNoofdays(Integer.parseInt(noofdays));
                if (btnAdd.getText().contains("Add")) {
                    if (action.insertRecord(record)) {
                        ps.button();
                        message = "Tour Schedule Details are added in the system";
                    } else {
                        ps.computererror();
                        message = "Insertion Failure due to:" + action.getErrormessage();
                    }
                } else if (btnAdd.getText().contains("Update")) {
                    record.setSID(sid);
                    if (action.updateRecord(record)) {
                        ps.button();
                        message = "Tour Schedule Details are updated in the system";
                    } else {
                        ps.computererror();
                        message = "Updation Failure due to:" + action.getErrormessage();
                    }
                    CommonOperations.showScreen(getDesktopPane(), new ViewTourSchedule());
                    dispose();
                } else {
                    ps.computererror();
                    message = "No proper operation";
                }
            }
        } else {
            ps.computererror();
        }
        JOptionPane.showMessageDialog(this, message);
    }//GEN-LAST:event_btnAddActionPerformed

    private void jtfConsumerNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfConsumerNameKeyTyped
        if (!Character.isLetter(evt.getKeyChar())) {
            if (!Character.isWhitespace(evt.getKeyChar())) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_jtfConsumerNameKeyTyped

    private void jtfNoOfDaysKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfNoOfDaysKeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_jtfNoOfDaysKeyTyped

    private void btnCheckAvailabilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckAvailabilityActionPerformed
        ProSound ps = new ProSound();
        String message = "";
        try {
            jcbDriverID.removeAllItems();
            jcbDriverID.addItem("Choose Driver");
            jcbTruckNo.removeAllItems();
            jcbTruckNo.addItem("Choose Truck No");
            if (fdpTourDate.getSelectedDate() != null) {
                List<DriverInfo> driver = new DriverInfoDAO().getAllRecord(fdpTourDate.getSelectedDate());
                List<TruckInfo> truck = new TruckInfoDAO().getAllRecord(fdpTourDate.getSelectedDate());
                for (DriverInfo di : driver) {
                    jcbDriverID.addItem(di);
                }
                for (TruckInfo ti : truck) {
                    jcbTruckNo.addItem(ti);
                }
                if (jcbDriverID.getItemCount() > 1 && jcbTruckNo.getItemCount() > 1) {
                    ps.computererror();
                    message += "Driver and Truck both are available on selected date.Please choose any driver and truck.\n";
                }
                visibilitymodes(1);
            } else {
                ps.computererror();
                message += "Please choose any date";
                visibilitymodes(0);
            }

        } catch (Exception ex) {
            ps.computererror();
            if (jcbDriverID.getItemCount() <= 1 && jcbTruckNo.getItemCount() <= 1) {
                message += "Neither Driver nor Truck is available on your selected date.\nPlease select another date.\n";
            } else {
                if (jcbDriverID.getItemCount() <= 1) {
                    message += "No Driver is available on your selected date.\nPlease select another date.\n";
                }
                if (jcbTruckNo.getItemCount() <= 1) {
                    message += "No Truck is available on your selected date.\nPlease select another date.\n";
                }
            }
            visibilitymodes(0);
        }
        JOptionPane.showMessageDialog(this, message);
    }//GEN-LAST:event_btnCheckAvailabilityActionPerformed
    public void visibilitymodes(int a) {
        if (a == 1) {
            jcbTruckNo.setEnabled(true);
            jcbDriverID.setEnabled(true);
            jtfConsumerName.setEnabled(true);
            jtfAddress.setEnabled(true);
            jtfContactNo.setEnabled(true);
            jtfConsumerName.setEnabled(true);
            jtfCharges.setEnabled(true);
            jtfNoOfDays.setEnabled(true);
            btnAdd.setEnabled(true);
            jLabel1.setEnabled(true);
            jLabel2.setEnabled(true);
            jLabel3.setEnabled(true);
            jLabel4.setEnabled(true);
            jLabel5.setEnabled(true);
            jLabel6.setEnabled(true);
            jLabel8.setEnabled(true);
            jLabel10.setEnabled(true);
            jLabel11.setEnabled(true);
            jLabel12.setEnabled(true);
            jLabel13.setEnabled(true);
            jLabel14.setEnabled(true);
        } else {
            jcbTruckNo.setEnabled(false);
            jcbDriverID.setEnabled(false);
            jtfConsumerName.setEnabled(false);
            jtfAddress.setEnabled(false);
            jtfContactNo.setEnabled(false);
            jtfConsumerName.setEnabled(false);
            jtfCharges.setEnabled(false);
            jtfNoOfDays.setEnabled(false);
            btnAdd.setEnabled(false);
            jLabel1.setEnabled(false);
            jLabel2.setEnabled(false);
            jLabel3.setEnabled(false);
            jLabel4.setEnabled(false);
            jLabel5.setEnabled(false);
            jLabel6.setEnabled(false);
            jLabel8.setEnabled(false);
            jLabel10.setEnabled(false);
            jLabel11.setEnabled(false);
            jLabel12.setEnabled(false);
            jLabel13.setEnabled(false);
            jLabel14.setEnabled(false);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCheckAvailability;
    private adminui.FutureDatePanel1 fdpTourDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JComboBox jcbDriverID;
    private javax.swing.JComboBox jcbTruckNo;
    private javax.swing.JTextField jtfAddress;
    private javax.swing.JTextField jtfCharges;
    private javax.swing.JTextField jtfConsumerName;
    private javax.swing.JTextField jtfContactNo;
    private javax.swing.JTextField jtfNoOfDays;
    // End of variables declaration//GEN-END:variables
}
