/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package adminui;

import java.util.List;
import javax.swing.JOptionPane;
import model.dao.ItemInfoDAO;
import model.dao.TourItemsDAO;
import model.dao.TourScheduleDAO;
import model.to.ItemInfo;
import model.to.TourItems;
import model.to.TourSchedule;
import operations.Validations;
import sound.ProSound;
import utility.CommonOperations;

/**
 *
 * @author ADITYA
 */
public class AddTourItems extends javax.swing.JInternalFrame {

    private int tiid;

    public AddTourItems() {
        initComponents();
        jcbSid.removeAllItems();
        jcbSid.addItem("Choose SID");
        List<TourSchedule> tour = new TourScheduleDAO().getAllRecord();
        for (TourSchedule ts : tour) {
            jcbSid.addItem(ts);
        }
        jcbItemId.removeAllItems();
        jcbItemId.addItem("Choose Item ID");
        List<ItemInfo> item = new ItemInfoDAO().getAllRecord();
        for (ItemInfo ii : item) {
            jcbItemId.addItem(ii);
        }
    }

    public AddTourItems(TourItems record) {
        this();
        if (record != null) {
            this.tiid = record.getTIID();
            setTitle("Update Tour Item Details");
            btnAdd.setText("Update Tour Item Details");
            for (int i = 1; i < jcbSid.getItemCount(); i++) {
                TourSchedule tour = (TourSchedule) jcbSid.getItemAt(i);
                if (tour.getSID() == record.getSID()) {
                    jcbSid.setSelectedIndex(i);
                    break;
                }
            }
            for (int i = 1; i < jcbItemId.getItemCount(); i++) {
                ItemInfo cat = (ItemInfo) jcbItemId.getItemAt(i);
                if (cat.getItemid() == record.getItemid()) {
                    jcbItemId.setSelectedIndex(i);
                    break;
                }
            }
            jtfQuantity.setText(String.valueOf(record.getQuantity()));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jcbSid = new javax.swing.JComboBox();
        jcbItemId = new javax.swing.JComboBox();
        jtfQuantity = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Add Tour Item Details");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Choose Item ID:");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Choose SID:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("Enter Quantity:");

        jcbSid.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jcbItemId.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jtfQuantity.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jtfQuantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfQuantityKeyTyped(evt);
            }
        });

        btnAdd.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnAdd.setText("Add Tour Item Details");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
                    .addComponent(jcbItemId, 0, 344, Short.MAX_VALUE)
                    .addComponent(jcbSid, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtfQuantity))
                .addGap(98, 98, 98))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(80, 80, 80)
                    .addComponent(jLabel2)
                    .addContainerGap(536, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jcbSid, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jcbItemId, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jtfQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(73, 73, 73)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(350, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        ProSound ps = new ProSound();
        String message = "";
        boolean allvalid = true;
        String quantity = jtfQuantity.getText().trim();
        if (jcbSid.getSelectedIndex() == 0) {
            allvalid = false;
            message += "Please choose any SID\n\n";
        }
        if (jcbItemId.getSelectedIndex() == 0) {
            allvalid = false;
            message += "Please choose any Item ID\n\n";
        }
        if (Validations.isEmpty(quantity)) {
            allvalid = false;
            message += "Please enter some value in Quantity box\n\n";
        } else if (!Validations.isNumeric(quantity)) {
            allvalid = false;
            message += "Please enter integer value in Quantity box\n\n";
        }
        if (allvalid) {
            TourSchedule ts = (TourSchedule) jcbSid.getSelectedItem();
            ItemInfo ii = (ItemInfo) jcbItemId.getSelectedItem();
            TourItemsDAO action = new TourItemsDAO();
            TourItems record = new TourItems();
            record.setSID(ts.getSID());
            record.setItemid(ii.getItemid());
            record.setQuantity(Integer.parseInt(quantity));
            if (btnAdd.getText().contains("Add")) {
                if (action.insertRecord(record)) {
                    ps.button();
                    message = "Tour Item Details are added in the system";
                } else {
                    ps.computererror();
                    message = "Insertion Failure due to:" + action.getErrormessage();
                }
            } else if (btnAdd.getText().contains("Update")) {
                record.setTIID(tiid);
                if (action.updateRecord(record)) {
                    ps.button();
                    message = "Tour Item Details are updated in the system";
                } else {
                    ps.computererror();
                    message = "Updation Failure due to:" + action.getErrormessage();
                }
                CommonOperations.showScreen(getDesktopPane(), new ViewTourItems());
                dispose();
            } else {
                ps.computererror();
                message = "No proper operation";
            }
        } else {
            ps.computererror();
        }
        JOptionPane.showMessageDialog(this, message);
    }//GEN-LAST:event_btnAddActionPerformed

    private void jtfQuantityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfQuantityKeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_jtfQuantityKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JComboBox jcbItemId;
    private javax.swing.JComboBox jcbSid;
    private javax.swing.JTextField jtfQuantity;
    // End of variables declaration//GEN-END:variables
}
